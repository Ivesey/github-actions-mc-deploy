name: "Teardown pipeline"

on:
  workflow_dispatch:

env:
  # verbosity setting for Terraform logs
  TF_LOG: INFO

  # S3 bucket for the Terraform state
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE}}
  AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
  AWS_REGION: eu-west-2

permissions:
  id-token: write
  contents: read

jobs:
  infrastructure:
    name: Teardown EKS and AKS clusters
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./tf

    steps:
      - name: Checkout the repository to the runner
        id: checkout
        uses: actions/checkout@v2
 
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.3.1
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          role-session-name: github-actions-demo
          aws-region: ${{ env.AWS_REGION }}

      - name: Configure Azure credentials
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
    
      - name: Terraform init
        id: init
        run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"
 
      - name: Terraform Destroy
        run: |
          terraform destroy -auto-approve -input=false \
            -var eks_cluster_name=${{ vars.EKS_CLUSTER_NAME }} \
            -var aks_cluster_name=${{ vars.AKS_CLUSTER_NAME }} \
            -var resource_group_name=${{ vars.RESOURCE_GROUP_NAME }}
